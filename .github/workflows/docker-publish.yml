name: Docker Publish

on:
  push:
    branches:
      - main # Change this to the branch you want to trigger the workflow on

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials # Step to configure the credentials to deploy the image
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Log Variables
        run: |
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          echo "ECR_REPOSITORY: $ECR_REPOSITORY"
          echo "IMAGE_TAG: $IMAGE_TAG"

      - name: Build, tag, and push image to Amazon ECR # Step to push the image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.REPO_NAME }}
          IMAGE_TAG: "${{ env.BRANCH_NAME }}-${{ env.GITHUB_HASH }}"
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          docker build --build-arg GITHUB_TOKEN=$GH_TOKEN -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Pushed image with tag ${{ env.IMAGE_TAG }}
        run: |
          echo "Full path: $IMAGE_NAME"
          echo "Branch: $BRANCH_NAME"
          echo "Commit hash: $GITHUB_HASH"
